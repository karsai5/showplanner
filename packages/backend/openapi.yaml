swagger: "2.0"
info:
  title: Showplanner backend
  description: API description in Markdown.
  version: 1.0.0
basePath: /v1
host: localhost:8080
schemes:
  - http
paths:
  /public/health:
    get:
      summary: Healthcheck
      description: Healthcheck endpoint
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/HealthCheck'
  /schedule:
    get:
      parameters:
        - in: query
          required: true
          name: showId
          type: integer
          description: ID of the show to get events from
      summary: Returns a list of events.
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ScheduleEventDTO'
        401:
          $ref: '#/responses/Error'
        500:
          $ref: '#/responses/Error'
  /events:
    post:
      summary: Creates an event
      consumes:
        - application/json
      parameters:
        - in: body
          name: event
          description: The show to create
          schema:
            $ref: '#/definitions/CreateEventDTO'

      responses:
        500:
          $ref: '#/responses/Error'
        400:
          $ref: '#/responses/Error'
        200:
          description: OK
          schema:
            $ref: '#/definitions/EventDTO'
  /public/schedule:
    get:
      parameters:
        - in: query
          required: true
          name: showSlug
          type: string
          description: ID of the show to get events from
      summary: Returns a list of events.
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: object
            properties: 
              showName:
                type: string
              events:
                type: array
                items:
                  $ref: '#/definitions/EventPublicDTO'
        500:
          $ref: '#/responses/Error'
  /events/{id}:
    delete:
      summary: Delete's an event
      parameters:
        - in: path
          name: id
          type: number
          required: true
          description: Id of event to delete
      produces:
        - application/json
      responses:
        500:
          $ref: '#/responses/Error'
        401:
          $ref: '#/responses/Error'
        404:
          $ref: '#/responses/Error'
        200:
    post:
      summary: Update event
      parameters:
        - in: path
          name: id
          type: number
          required: true
          description: Id of event update
        - in: body
          name: event
          description: The show to create
          schema:
            $ref: '#/definitions/CreateEventDTO'
      produces:
        - application/json
      responses:
        401:
          $ref: '#/responses/Error'
        404:
          $ref: '#/responses/Error'
        200:
          description: "Show"
          schema:
            $ref: '#/definitions/ShowDTO'
  /shows:
    get:
      summary: Returns a list of shows
      produces:
        - application/json
      responses:
        500:
          $ref: '#/responses/Error'
        401:
          $ref: '#/responses/Error'
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ShowDTO'
    post:
      summary: Creates a show
      consumes:
        - application/json
      parameters:
        - in: body
          name: show
          description: The show to create
          schema:
            $ref: '#/definitions/CreateShowDTO'

      responses:
        500:
          description: Internal server error
        400:
          $ref: '#/responses/Error'
        401:
          $ref: '#/responses/Error'
        200:
          description: OK
          schema:
            $ref: '#/definitions/ShowDTO'
  /shows/{showSlug}/summary:
    get:
      summary: Return details about a show
      parameters:
        - in: path
          name: showSlug
          type: string
          required: true
          description: Slug of show
      produces:
        - application/json
      responses:
        500:
          $ref: '#/responses/Error'
        401:
          $ref: '#/responses/Error'
        404:
          $ref: '#/responses/Error'
        200:
          description: "Show"
          schema:
            $ref: '#/definitions/ShowSummaryDTO'
  /availabilities:
    post:
      summary: Create or update availability
      produces:
        - application/json  
      parameters:
        - in: body
          name: availability
          description: The availability to create or update
          schema:
            $ref: '#/definitions/AvailabilityDTO'
      responses:
        500:
          description: Internal server error
        401:
          $ref: '#/responses/Error'
        200:
          description: OK
          schema:
            $ref: '#/definitions/AvailabilityDTO'
responses:
  Error:
    description: Error
    schema:
      $ref: '#/definitions/Error'
definitions:
  HealthCheck:
    type: object
    properties:
      message:
        type: string
    required:
      - message
  Error:
    type: object
    properties:
      code:
        type: string
      message:
        type: string
    required:
      - code
      - message
  ShowSummaryDTO:
    properties:
      id:
        type: integer
      name:
        type: string
      company:
        type: string
      slug:
        type: string
    required:
      - id
      - name
      - company
      - slug
  ShowDTO:
    properties:
      id:
        type: integer
      name:
        type: string
      company:
        type: string
      slug:
        type: string
    required:
      - id
      - name
      - company
      - slug
  CreateShowDTO:
    properties:
      name:
        type: string
      company:
        type: string
      slug:
        type: string
    required:
      - name
      - company
      - slug
  CreateEventDTO:
    properties:
      showId:
        type: integer
      start:
        type: string
        format: date-time
      end:
        type: string
        format: date-time
        x-nullable: true
      curtainsUp:
        type: string
        format: date-time
        x-nullable: true
      name:
        type: string
        x-nullable: true
      shortnote:
        type: string
        x-nullable: true
      address:
        type: string
        x-nullable: true
    required:
      - showId
      - start
  EventPublicDTO:
    properties:
      id:
        type: integer
      showId:
        type: integer
      start:
        type: string
        format: date-time
      name:
        type: string
        x-nullable: true
      nameRaw:
        type: string
        x-nullable: true
      curtainsUp:
        type: string
        format: date-time
        x-nullable: true
      end:
        type: string
        format: date-time
        x-nullable: true
    required:
      - id
      - start
  ScheduleEventDTO:
    allOf: 
    - $ref: '#/definitions/EventDTO'
    - type: object
      properties:
        availability:
          x-nullable: true
          $ref: '#/definitions/AvailabilityDTO'
  EventDTO:
    properties:
      id:
        type: integer
      showId:
        type: integer
      start:
        type: string
        format: date-time
      name:
        type: string
        x-nullable: true
      nameRaw:
        type: string
        x-nullable: true
      shortnote:
        type: string
        x-nullable: true
      address:
        type: string
        x-nullable: true
      curtainsUp:
        type: string
        format: date-time
        x-nullable: true
      end:
        type: string
        format: date-time
        x-nullable: true
    required:
      - id
      - start
  AvailabilityDTO:
    type: object
    properties:
      eventId:
        type: integer
      userId:
        type: string
      available:
        type: boolean
    required:
      - eventId
      - userId
      - available
