// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ShowTimerSummaryDTO show timer summary d t o
//
// swagger:model showTimerSummaryDTO
type ShowTimerSummaryDTO struct {

	// id
	// Format: uuid
	ID strfmt.UUID `json:"id,omitempty"`

	// show end
	// Format: date-time
	ShowEnd *strfmt.DateTime `json:"showEnd,omitempty"`

	// show start
	// Format: date-time
	ShowStart *strfmt.DateTime `json:"showStart,omitempty"`
}

// Validate validates this show timer summary d t o
func (m *ShowTimerSummaryDTO) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateShowEnd(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateShowStart(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ShowTimerSummaryDTO) validateID(formats strfmt.Registry) error {
	if swag.IsZero(m.ID) { // not required
		return nil
	}

	if err := validate.FormatOf("id", "body", "uuid", m.ID.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *ShowTimerSummaryDTO) validateShowEnd(formats strfmt.Registry) error {
	if swag.IsZero(m.ShowEnd) { // not required
		return nil
	}

	if err := validate.FormatOf("showEnd", "body", "date-time", m.ShowEnd.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *ShowTimerSummaryDTO) validateShowStart(formats strfmt.Registry) error {
	if swag.IsZero(m.ShowStart) { // not required
		return nil
	}

	if err := validate.FormatOf("showStart", "body", "date-time", m.ShowStart.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this show timer summary d t o based on context it is used
func (m *ShowTimerSummaryDTO) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ShowTimerSummaryDTO) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ShowTimerSummaryDTO) UnmarshalBinary(b []byte) error {
	var res ShowTimerSummaryDTO
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
