// Code generated by go-swagger; DO NOT EDIT.

package dtos

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PersonPrivateDetailsDTO person private details d t o
//
// swagger:model personPrivateDetailsDTO
type PersonPrivateDetailsDTO struct {

	// allergies
	Allergies string `json:"allergies,omitempty"`

	// dob
	// Format: date
	Dob strfmt.Date `json:"dob,omitempty"`

	// email
	Email string `json:"email,omitempty"`

	// emergency contact
	EmergencyContact *PersonPrivateDetailsDTOEmergencyContact `json:"emergencyContact,omitempty"`

	// phone
	Phone string `json:"phone,omitempty"`

	// wwc
	Wwc *string `json:"wwc,omitempty"`
}

// Validate validates this person private details d t o
func (m *PersonPrivateDetailsDTO) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDob(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateEmergencyContact(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PersonPrivateDetailsDTO) validateDob(formats strfmt.Registry) error {
	if swag.IsZero(m.Dob) { // not required
		return nil
	}

	if err := validate.FormatOf("dob", "body", "date", m.Dob.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *PersonPrivateDetailsDTO) validateEmergencyContact(formats strfmt.Registry) error {
	if swag.IsZero(m.EmergencyContact) { // not required
		return nil
	}

	if m.EmergencyContact != nil {
		if err := m.EmergencyContact.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("emergencyContact")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("emergencyContact")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this person private details d t o based on the context it is used
func (m *PersonPrivateDetailsDTO) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateEmergencyContact(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PersonPrivateDetailsDTO) contextValidateEmergencyContact(ctx context.Context, formats strfmt.Registry) error {

	if m.EmergencyContact != nil {

		if swag.IsZero(m.EmergencyContact) { // not required
			return nil
		}

		if err := m.EmergencyContact.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("emergencyContact")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("emergencyContact")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *PersonPrivateDetailsDTO) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PersonPrivateDetailsDTO) UnmarshalBinary(b []byte) error {
	var res PersonPrivateDetailsDTO
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// PersonPrivateDetailsDTOEmergencyContact person private details d t o emergency contact
//
// swagger:model PersonPrivateDetailsDTOEmergencyContact
type PersonPrivateDetailsDTOEmergencyContact struct {

	// name
	Name string `json:"name,omitempty"`

	// phone
	Phone string `json:"phone,omitempty"`

	// relationship
	Relationship string `json:"relationship,omitempty"`
}

// Validate validates this person private details d t o emergency contact
func (m *PersonPrivateDetailsDTOEmergencyContact) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this person private details d t o emergency contact based on context it is used
func (m *PersonPrivateDetailsDTOEmergencyContact) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *PersonPrivateDetailsDTOEmergencyContact) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PersonPrivateDetailsDTOEmergencyContact) UnmarshalBinary(b []byte) error {
	var res PersonPrivateDetailsDTOEmergencyContact
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
