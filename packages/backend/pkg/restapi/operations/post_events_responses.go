// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"showplanner.io/pkg/models"
)

// PostEventsOKCode is the HTTP code returned for type PostEventsOK
const PostEventsOKCode int = 200

/*
PostEventsOK OK

swagger:response postEventsOK
*/
type PostEventsOK struct {

	/*
	  In: Body
	*/
	Payload *models.EventDTO `json:"body,omitempty"`
}

// NewPostEventsOK creates PostEventsOK with default headers values
func NewPostEventsOK() *PostEventsOK {

	return &PostEventsOK{}
}

// WithPayload adds the payload to the post events o k response
func (o *PostEventsOK) WithPayload(payload *models.EventDTO) *PostEventsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post events o k response
func (o *PostEventsOK) SetPayload(payload *models.EventDTO) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostEventsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostEventsBadRequestCode is the HTTP code returned for type PostEventsBadRequest
const PostEventsBadRequestCode int = 400

/*
PostEventsBadRequest Error

swagger:response postEventsBadRequest
*/
type PostEventsBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostEventsBadRequest creates PostEventsBadRequest with default headers values
func NewPostEventsBadRequest() *PostEventsBadRequest {

	return &PostEventsBadRequest{}
}

// WithPayload adds the payload to the post events bad request response
func (o *PostEventsBadRequest) WithPayload(payload *models.Error) *PostEventsBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post events bad request response
func (o *PostEventsBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostEventsBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostEventsInternalServerErrorCode is the HTTP code returned for type PostEventsInternalServerError
const PostEventsInternalServerErrorCode int = 500

/*
PostEventsInternalServerError Error

swagger:response postEventsInternalServerError
*/
type PostEventsInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostEventsInternalServerError creates PostEventsInternalServerError with default headers values
func NewPostEventsInternalServerError() *PostEventsInternalServerError {

	return &PostEventsInternalServerError{}
}

// WithPayload adds the payload to the post events internal server error response
func (o *PostEventsInternalServerError) WithPayload(payload *models.Error) *PostEventsInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post events internal server error response
func (o *PostEventsInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostEventsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
