// Code generated by go-swagger; DO NOT EDIT.

package personnel

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// PostMeHandlerFunc turns a function with the right signature into a post me handler
type PostMeHandlerFunc func(PostMeParams) middleware.Responder

// Handle executing the request and returning a response
func (fn PostMeHandlerFunc) Handle(params PostMeParams) middleware.Responder {
	return fn(params)
}

// PostMeHandler interface for that can handle valid post me params
type PostMeHandler interface {
	Handle(PostMeParams) middleware.Responder
}

// NewPostMe creates a new http.Handler for the post me operation
func NewPostMe(ctx *middleware.Context, handler PostMeHandler) *PostMe {
	return &PostMe{Context: ctx, Handler: handler}
}

/*
	PostMe swagger:route POST /me personnel postMe

Update personal details
*/
type PostMe struct {
	Context *middleware.Context
	Handler PostMeHandler
}

func (o *PostMe) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewPostMeParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
