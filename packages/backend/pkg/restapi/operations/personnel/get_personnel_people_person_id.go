// Code generated by go-swagger; DO NOT EDIT.

package personnel

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetPersonnelPeoplePersonIDHandlerFunc turns a function with the right signature into a get personnel people person ID handler
type GetPersonnelPeoplePersonIDHandlerFunc func(GetPersonnelPeoplePersonIDParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetPersonnelPeoplePersonIDHandlerFunc) Handle(params GetPersonnelPeoplePersonIDParams) middleware.Responder {
	return fn(params)
}

// GetPersonnelPeoplePersonIDHandler interface for that can handle valid get personnel people person ID params
type GetPersonnelPeoplePersonIDHandler interface {
	Handle(GetPersonnelPeoplePersonIDParams) middleware.Responder
}

// NewGetPersonnelPeoplePersonID creates a new http.Handler for the get personnel people person ID operation
func NewGetPersonnelPeoplePersonID(ctx *middleware.Context, handler GetPersonnelPeoplePersonIDHandler) *GetPersonnelPeoplePersonID {
	return &GetPersonnelPeoplePersonID{Context: ctx, Handler: handler}
}

/*
	GetPersonnelPeoplePersonID swagger:route GET /personnel/people/{personId} personnel getPersonnelPeoplePersonId

Get details of person
*/
type GetPersonnelPeoplePersonID struct {
	Context *middleware.Context
	Handler GetPersonnelPeoplePersonIDHandler
}

func (o *GetPersonnelPeoplePersonID) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetPersonnelPeoplePersonIDParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
