// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetInvitationsHandlerFunc turns a function with the right signature into a get invitations handler
type GetInvitationsHandlerFunc func(GetInvitationsParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetInvitationsHandlerFunc) Handle(params GetInvitationsParams) middleware.Responder {
	return fn(params)
}

// GetInvitationsHandler interface for that can handle valid get invitations params
type GetInvitationsHandler interface {
	Handle(GetInvitationsParams) middleware.Responder
}

// NewGetInvitations creates a new http.Handler for the get invitations operation
func NewGetInvitations(ctx *middleware.Context, handler GetInvitationsHandler) *GetInvitations {
	return &GetInvitations{Context: ctx, Handler: handler}
}

/*
	GetInvitations swagger:route GET /invitations/ getInvitations

Get invitations for a show
*/
type GetInvitations struct {
	Context *middleware.Context
	Handler GetInvitationsHandler
}

func (o *GetInvitations) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetInvitationsParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
