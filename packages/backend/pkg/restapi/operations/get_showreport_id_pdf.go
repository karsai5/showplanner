// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetShowreportIDPdfHandlerFunc turns a function with the right signature into a get showreport ID pdf handler
type GetShowreportIDPdfHandlerFunc func(GetShowreportIDPdfParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetShowreportIDPdfHandlerFunc) Handle(params GetShowreportIDPdfParams) middleware.Responder {
	return fn(params)
}

// GetShowreportIDPdfHandler interface for that can handle valid get showreport ID pdf params
type GetShowreportIDPdfHandler interface {
	Handle(GetShowreportIDPdfParams) middleware.Responder
}

// NewGetShowreportIDPdf creates a new http.Handler for the get showreport ID pdf operation
func NewGetShowreportIDPdf(ctx *middleware.Context, handler GetShowreportIDPdfHandler) *GetShowreportIDPdf {
	return &GetShowreportIDPdf{Context: ctx, Handler: handler}
}

/*
	GetShowreportIDPdf swagger:route GET /showreport/{id}/pdf getShowreportIdPdf

Returns the report in the PDF format
*/
type GetShowreportIDPdf struct {
	Context *middleware.Context
	Handler GetShowreportIDPdfHandler
}

func (o *GetShowreportIDPdf) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetShowreportIDPdfParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
