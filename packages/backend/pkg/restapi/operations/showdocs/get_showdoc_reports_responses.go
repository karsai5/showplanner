// Code generated by go-swagger; DO NOT EDIT.

package showdocs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"showplanner.io/pkg/restapi/dtos"
)

// GetShowdocReportsOKCode is the HTTP code returned for type GetShowdocReportsOK
const GetShowdocReportsOKCode int = 200

/*
GetShowdocReportsOK OK

swagger:response getShowdocReportsOK
*/
type GetShowdocReportsOK struct {

	/*
	  In: Body
	*/
	Payload []*dtos.ShowReportSummaryDTO `json:"body,omitempty"`
}

// NewGetShowdocReportsOK creates GetShowdocReportsOK with default headers values
func NewGetShowdocReportsOK() *GetShowdocReportsOK {

	return &GetShowdocReportsOK{}
}

// WithPayload adds the payload to the get showdoc reports o k response
func (o *GetShowdocReportsOK) WithPayload(payload []*dtos.ShowReportSummaryDTO) *GetShowdocReportsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get showdoc reports o k response
func (o *GetShowdocReportsOK) SetPayload(payload []*dtos.ShowReportSummaryDTO) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetShowdocReportsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*dtos.ShowReportSummaryDTO, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetShowdocReportsUnauthorizedCode is the HTTP code returned for type GetShowdocReportsUnauthorized
const GetShowdocReportsUnauthorizedCode int = 401

/*
GetShowdocReportsUnauthorized Error

swagger:response getShowdocReportsUnauthorized
*/
type GetShowdocReportsUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *dtos.Error `json:"body,omitempty"`
}

// NewGetShowdocReportsUnauthorized creates GetShowdocReportsUnauthorized with default headers values
func NewGetShowdocReportsUnauthorized() *GetShowdocReportsUnauthorized {

	return &GetShowdocReportsUnauthorized{}
}

// WithPayload adds the payload to the get showdoc reports unauthorized response
func (o *GetShowdocReportsUnauthorized) WithPayload(payload *dtos.Error) *GetShowdocReportsUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get showdoc reports unauthorized response
func (o *GetShowdocReportsUnauthorized) SetPayload(payload *dtos.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetShowdocReportsUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetShowdocReportsNotFoundCode is the HTTP code returned for type GetShowdocReportsNotFound
const GetShowdocReportsNotFoundCode int = 404

/*
GetShowdocReportsNotFound Error

swagger:response getShowdocReportsNotFound
*/
type GetShowdocReportsNotFound struct {

	/*
	  In: Body
	*/
	Payload *dtos.Error `json:"body,omitempty"`
}

// NewGetShowdocReportsNotFound creates GetShowdocReportsNotFound with default headers values
func NewGetShowdocReportsNotFound() *GetShowdocReportsNotFound {

	return &GetShowdocReportsNotFound{}
}

// WithPayload adds the payload to the get showdoc reports not found response
func (o *GetShowdocReportsNotFound) WithPayload(payload *dtos.Error) *GetShowdocReportsNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get showdoc reports not found response
func (o *GetShowdocReportsNotFound) SetPayload(payload *dtos.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetShowdocReportsNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetShowdocReportsInternalServerErrorCode is the HTTP code returned for type GetShowdocReportsInternalServerError
const GetShowdocReportsInternalServerErrorCode int = 500

/*
GetShowdocReportsInternalServerError Error

swagger:response getShowdocReportsInternalServerError
*/
type GetShowdocReportsInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *dtos.Error `json:"body,omitempty"`
}

// NewGetShowdocReportsInternalServerError creates GetShowdocReportsInternalServerError with default headers values
func NewGetShowdocReportsInternalServerError() *GetShowdocReportsInternalServerError {

	return &GetShowdocReportsInternalServerError{}
}

// WithPayload adds the payload to the get showdoc reports internal server error response
func (o *GetShowdocReportsInternalServerError) WithPayload(payload *dtos.Error) *GetShowdocReportsInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get showdoc reports internal server error response
func (o *GetShowdocReportsInternalServerError) SetPayload(payload *dtos.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetShowdocReportsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
