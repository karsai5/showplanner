// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"showplanner.io/pkg/restapi/dtos"
)

// GetPersonnelAssignableOKCode is the HTTP code returned for type GetPersonnelAssignableOK
const GetPersonnelAssignableOKCode int = 200

/*
GetPersonnelAssignableOK OK

swagger:response getPersonnelAssignableOK
*/
type GetPersonnelAssignableOK struct {

	/*
	  In: Body
	*/
	Payload *dtos.ArrayOfPersonSummaryDTO `json:"body,omitempty"`
}

// NewGetPersonnelAssignableOK creates GetPersonnelAssignableOK with default headers values
func NewGetPersonnelAssignableOK() *GetPersonnelAssignableOK {

	return &GetPersonnelAssignableOK{}
}

// WithPayload adds the payload to the get personnel assignable o k response
func (o *GetPersonnelAssignableOK) WithPayload(payload *dtos.ArrayOfPersonSummaryDTO) *GetPersonnelAssignableOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get personnel assignable o k response
func (o *GetPersonnelAssignableOK) SetPayload(payload *dtos.ArrayOfPersonSummaryDTO) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPersonnelAssignableOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetPersonnelAssignableUnauthorizedCode is the HTTP code returned for type GetPersonnelAssignableUnauthorized
const GetPersonnelAssignableUnauthorizedCode int = 401

/*
GetPersonnelAssignableUnauthorized Error

swagger:response getPersonnelAssignableUnauthorized
*/
type GetPersonnelAssignableUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *dtos.Error `json:"body,omitempty"`
}

// NewGetPersonnelAssignableUnauthorized creates GetPersonnelAssignableUnauthorized with default headers values
func NewGetPersonnelAssignableUnauthorized() *GetPersonnelAssignableUnauthorized {

	return &GetPersonnelAssignableUnauthorized{}
}

// WithPayload adds the payload to the get personnel assignable unauthorized response
func (o *GetPersonnelAssignableUnauthorized) WithPayload(payload *dtos.Error) *GetPersonnelAssignableUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get personnel assignable unauthorized response
func (o *GetPersonnelAssignableUnauthorized) SetPayload(payload *dtos.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPersonnelAssignableUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetPersonnelAssignableInternalServerErrorCode is the HTTP code returned for type GetPersonnelAssignableInternalServerError
const GetPersonnelAssignableInternalServerErrorCode int = 500

/*
GetPersonnelAssignableInternalServerError Error

swagger:response getPersonnelAssignableInternalServerError
*/
type GetPersonnelAssignableInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *dtos.Error `json:"body,omitempty"`
}

// NewGetPersonnelAssignableInternalServerError creates GetPersonnelAssignableInternalServerError with default headers values
func NewGetPersonnelAssignableInternalServerError() *GetPersonnelAssignableInternalServerError {

	return &GetPersonnelAssignableInternalServerError{}
}

// WithPayload adds the payload to the get personnel assignable internal server error response
func (o *GetPersonnelAssignableInternalServerError) WithPayload(payload *dtos.Error) *GetPersonnelAssignableInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get personnel assignable internal server error response
func (o *GetPersonnelAssignableInternalServerError) SetPayload(payload *dtos.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPersonnelAssignableInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
