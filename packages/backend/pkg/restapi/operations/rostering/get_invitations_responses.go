// Code generated by go-swagger; DO NOT EDIT.

package rostering

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"showplanner.io/pkg/restapi/dtos"
)

// GetInvitationsOKCode is the HTTP code returned for type GetInvitationsOK
const GetInvitationsOKCode int = 200

/*
GetInvitationsOK OK

swagger:response getInvitationsOK
*/
type GetInvitationsOK struct {

	/*
	  In: Body
	*/
	Payload []*dtos.InvitationDTO `json:"body,omitempty"`
}

// NewGetInvitationsOK creates GetInvitationsOK with default headers values
func NewGetInvitationsOK() *GetInvitationsOK {

	return &GetInvitationsOK{}
}

// WithPayload adds the payload to the get invitations o k response
func (o *GetInvitationsOK) WithPayload(payload []*dtos.InvitationDTO) *GetInvitationsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get invitations o k response
func (o *GetInvitationsOK) SetPayload(payload []*dtos.InvitationDTO) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetInvitationsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*dtos.InvitationDTO, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetInvitationsUnauthorizedCode is the HTTP code returned for type GetInvitationsUnauthorized
const GetInvitationsUnauthorizedCode int = 401

/*
GetInvitationsUnauthorized Error

swagger:response getInvitationsUnauthorized
*/
type GetInvitationsUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *dtos.Error `json:"body,omitempty"`
}

// NewGetInvitationsUnauthorized creates GetInvitationsUnauthorized with default headers values
func NewGetInvitationsUnauthorized() *GetInvitationsUnauthorized {

	return &GetInvitationsUnauthorized{}
}

// WithPayload adds the payload to the get invitations unauthorized response
func (o *GetInvitationsUnauthorized) WithPayload(payload *dtos.Error) *GetInvitationsUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get invitations unauthorized response
func (o *GetInvitationsUnauthorized) SetPayload(payload *dtos.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetInvitationsUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetInvitationsInternalServerErrorCode is the HTTP code returned for type GetInvitationsInternalServerError
const GetInvitationsInternalServerErrorCode int = 500

/*
GetInvitationsInternalServerError Error

swagger:response getInvitationsInternalServerError
*/
type GetInvitationsInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *dtos.Error `json:"body,omitempty"`
}

// NewGetInvitationsInternalServerError creates GetInvitationsInternalServerError with default headers values
func NewGetInvitationsInternalServerError() *GetInvitationsInternalServerError {

	return &GetInvitationsInternalServerError{}
}

// WithPayload adds the payload to the get invitations internal server error response
func (o *GetInvitationsInternalServerError) WithPayload(payload *dtos.Error) *GetInvitationsInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get invitations internal server error response
func (o *GetInvitationsInternalServerError) SetPayload(payload *dtos.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetInvitationsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
