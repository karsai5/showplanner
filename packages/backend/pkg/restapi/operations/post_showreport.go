// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// PostShowreportHandlerFunc turns a function with the right signature into a post showreport handler
type PostShowreportHandlerFunc func(PostShowreportParams) middleware.Responder

// Handle executing the request and returning a response
func (fn PostShowreportHandlerFunc) Handle(params PostShowreportParams) middleware.Responder {
	return fn(params)
}

// PostShowreportHandler interface for that can handle valid post showreport params
type PostShowreportHandler interface {
	Handle(PostShowreportParams) middleware.Responder
}

// NewPostShowreport creates a new http.Handler for the post showreport operation
func NewPostShowreport(ctx *middleware.Context, handler PostShowreportHandler) *PostShowreport {
	return &PostShowreport{Context: ctx, Handler: handler}
}

/*
	PostShowreport swagger:route POST /showreport postShowreport

Adds a person to a show
*/
type PostShowreport struct {
	Context *middleware.Context
	Handler PostShowreportHandler
}

func (o *PostShowreport) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewPostShowreportParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
