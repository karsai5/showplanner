// Code generated by go-swagger; DO NOT EDIT.

package shows

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetShowsShowIDRosterHandlerFunc turns a function with the right signature into a get shows show ID roster handler
type GetShowsShowIDRosterHandlerFunc func(GetShowsShowIDRosterParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetShowsShowIDRosterHandlerFunc) Handle(params GetShowsShowIDRosterParams) middleware.Responder {
	return fn(params)
}

// GetShowsShowIDRosterHandler interface for that can handle valid get shows show ID roster params
type GetShowsShowIDRosterHandler interface {
	Handle(GetShowsShowIDRosterParams) middleware.Responder
}

// NewGetShowsShowIDRoster creates a new http.Handler for the get shows show ID roster operation
func NewGetShowsShowIDRoster(ctx *middleware.Context, handler GetShowsShowIDRosterHandler) *GetShowsShowIDRoster {
	return &GetShowsShowIDRoster{Context: ctx, Handler: handler}
}

/*
	GetShowsShowIDRoster swagger:route GET /shows/{showId}/roster shows getShowsShowIdRoster

# Returns roster for a show

Get roster
*/
type GetShowsShowIDRoster struct {
	Context *middleware.Context
	Handler GetShowsShowIDRosterHandler
}

func (o *GetShowsShowIDRoster) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetShowsShowIDRosterParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
