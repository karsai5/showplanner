// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "API description in Markdown.",
    "title": "Showplanner backend",
    "version": "1.0.0"
  },
  "host": "localhost:8080",
  "basePath": "/v1",
  "paths": {
    "/events": {
      "get": {
        "security": [
          {
            "loggedIn": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Returns a list of events.",
        "parameters": [
          {
            "type": "integer",
            "description": "ID of the show to get events from",
            "name": "showId",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EventDTO"
              }
            }
          },
          "500": {
            "$ref": "#/responses/Error"
          }
        }
      },
      "post": {
        "security": [
          {
            "loggedIn": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "summary": "Creates an event",
        "parameters": [
          {
            "description": "The show to create",
            "name": "event",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/EventCreateDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EventDTO"
            }
          },
          "400": {
            "$ref": "#/responses/Error"
          },
          "500": {
            "$ref": "#/responses/Error"
          }
        }
      }
    },
    "/shows": {
      "get": {
        "security": [
          {
            "loggedIn": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Returns a list of shows",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BaseShowDTO"
              }
            }
          },
          "401": {
            "$ref": "#/responses/Error"
          }
        }
      },
      "post": {
        "security": [
          {
            "loggedIn": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "summary": "Creates a show",
        "parameters": [
          {
            "description": "The show to create",
            "name": "show",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/BaseShowDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseShowDTO"
            }
          },
          "400": {
            "$ref": "#/responses/Error"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/shows/{showSlug}": {
      "get": {
        "security": [
          {
            "loggedIn": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Return details about a show",
        "parameters": [
          {
            "type": "string",
            "description": "Slug of show",
            "name": "showSlug",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Show",
            "schema": {
              "$ref": "#/definitions/ShowDTO"
            }
          },
          "401": {
            "$ref": "#/responses/Error"
          },
          "404": {
            "$ref": "#/responses/Error"
          }
        }
      }
    },
    "/users": {
      "get": {
        "description": "Optional extended description in Markdown.",
        "produces": [
          "application/json"
        ],
        "summary": "Returns a list of users.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "definitions": {
    "BaseShowDTO": {
      "required": [
        "name",
        "company",
        "slug"
      ],
      "properties": {
        "company": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "slug": {
          "type": "string"
        }
      }
    },
    "Error": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "EventCreateDTO": {
      "required": [
        "showId",
        "start"
      ],
      "properties": {
        "showId": {
          "type": "integer"
        },
        "start": {
          "type": "string"
        }
      }
    },
    "EventDTO": {
      "required": [
        "id",
        "start"
      ],
      "properties": {
        "curtainsUp": {
          "type": "string",
          "format": "date-time"
        },
        "end": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "integer"
        },
        "shortnote": {
          "type": "string"
        },
        "showId": {
          "type": "integer"
        },
        "start": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ShowDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseShowDTO"
        }
      ]
    },
    "principal": {
      "type": "string"
    }
  },
  "responses": {
    "Error": {
      "description": "Error",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    }
  },
  "securityDefinitions": {
    "loggedIn": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "API description in Markdown.",
    "title": "Showplanner backend",
    "version": "1.0.0"
  },
  "host": "localhost:8080",
  "basePath": "/v1",
  "paths": {
    "/events": {
      "get": {
        "security": [
          {
            "loggedIn": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Returns a list of events.",
        "parameters": [
          {
            "type": "integer",
            "description": "ID of the show to get events from",
            "name": "showId",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EventDTO"
              }
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "security": [
          {
            "loggedIn": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "summary": "Creates an event",
        "parameters": [
          {
            "description": "The show to create",
            "name": "event",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/EventCreateDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EventDTO"
            }
          },
          "400": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/shows": {
      "get": {
        "security": [
          {
            "loggedIn": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Returns a list of shows",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BaseShowDTO"
              }
            }
          },
          "401": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "security": [
          {
            "loggedIn": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "summary": "Creates a show",
        "parameters": [
          {
            "description": "The show to create",
            "name": "show",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/BaseShowDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseShowDTO"
            }
          },
          "400": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/shows/{showSlug}": {
      "get": {
        "security": [
          {
            "loggedIn": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Return details about a show",
        "parameters": [
          {
            "type": "string",
            "description": "Slug of show",
            "name": "showSlug",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Show",
            "schema": {
              "$ref": "#/definitions/ShowDTO"
            }
          },
          "401": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "description": "Optional extended description in Markdown.",
        "produces": [
          "application/json"
        ],
        "summary": "Returns a list of users.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "definitions": {
    "BaseShowDTO": {
      "required": [
        "name",
        "company",
        "slug"
      ],
      "properties": {
        "company": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "slug": {
          "type": "string"
        }
      }
    },
    "Error": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "EventCreateDTO": {
      "required": [
        "showId",
        "start"
      ],
      "properties": {
        "showId": {
          "type": "integer"
        },
        "start": {
          "type": "string"
        }
      }
    },
    "EventDTO": {
      "required": [
        "id",
        "start"
      ],
      "properties": {
        "curtainsUp": {
          "type": "string",
          "format": "date-time"
        },
        "end": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "integer"
        },
        "shortnote": {
          "type": "string"
        },
        "showId": {
          "type": "integer"
        },
        "start": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ShowDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseShowDTO"
        }
      ]
    },
    "principal": {
      "type": "string"
    }
  },
  "responses": {
    "Error": {
      "description": "Error",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    }
  },
  "securityDefinitions": {
    "loggedIn": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  }
}`))
}
