// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetShowsHandlerFunc turns a function with the right signature into a get shows handler
type GetShowsHandlerFunc func(GetShowsParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetShowsHandlerFunc) Handle(params GetShowsParams) middleware.Responder {
	return fn(params)
}

// GetShowsHandler interface for that can handle valid get shows params
type GetShowsHandler interface {
	Handle(GetShowsParams) middleware.Responder
}

// NewGetShows creates a new http.Handler for the get shows operation
func NewGetShows(ctx *middleware.Context, handler GetShowsHandler) *GetShows {
	return &GetShows{Context: ctx, Handler: handler}
}

/*
	GetShows swagger:route GET /shows getShows

Returns a list of shows
*/
type GetShows struct {
	Context *middleware.Context
	Handler GetShowsHandler
}

func (o *GetShows) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetShowsParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
