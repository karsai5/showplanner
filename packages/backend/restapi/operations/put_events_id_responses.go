// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"go-backend/models"
)

// PutEventsIDOKCode is the HTTP code returned for type PutEventsIDOK
const PutEventsIDOKCode int = 200

/*
PutEventsIDOK Show

swagger:response putEventsIdOK
*/
type PutEventsIDOK struct {

	/*
	  In: Body
	*/
	Payload *models.ShowDTO `json:"body,omitempty"`
}

// NewPutEventsIDOK creates PutEventsIDOK with default headers values
func NewPutEventsIDOK() *PutEventsIDOK {

	return &PutEventsIDOK{}
}

// WithPayload adds the payload to the put events Id o k response
func (o *PutEventsIDOK) WithPayload(payload *models.ShowDTO) *PutEventsIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put events Id o k response
func (o *PutEventsIDOK) SetPayload(payload *models.ShowDTO) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutEventsIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PutEventsIDUnauthorizedCode is the HTTP code returned for type PutEventsIDUnauthorized
const PutEventsIDUnauthorizedCode int = 401

/*
PutEventsIDUnauthorized Error

swagger:response putEventsIdUnauthorized
*/
type PutEventsIDUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPutEventsIDUnauthorized creates PutEventsIDUnauthorized with default headers values
func NewPutEventsIDUnauthorized() *PutEventsIDUnauthorized {

	return &PutEventsIDUnauthorized{}
}

// WithPayload adds the payload to the put events Id unauthorized response
func (o *PutEventsIDUnauthorized) WithPayload(payload *models.Error) *PutEventsIDUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put events Id unauthorized response
func (o *PutEventsIDUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutEventsIDUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PutEventsIDNotFoundCode is the HTTP code returned for type PutEventsIDNotFound
const PutEventsIDNotFoundCode int = 404

/*
PutEventsIDNotFound Error

swagger:response putEventsIdNotFound
*/
type PutEventsIDNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPutEventsIDNotFound creates PutEventsIDNotFound with default headers values
func NewPutEventsIDNotFound() *PutEventsIDNotFound {

	return &PutEventsIDNotFound{}
}

// WithPayload adds the payload to the put events Id not found response
func (o *PutEventsIDNotFound) WithPayload(payload *models.Error) *PutEventsIDNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put events Id not found response
func (o *PutEventsIDNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutEventsIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
