// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"go-backend/models"
)

// GetEventsPublicOKCode is the HTTP code returned for type GetEventsPublicOK
const GetEventsPublicOKCode int = 200

/*
GetEventsPublicOK OK

swagger:response getEventsPublicOK
*/
type GetEventsPublicOK struct {

	/*
	  In: Body
	*/
	Payload []*models.EventPublicDTO `json:"body,omitempty"`
}

// NewGetEventsPublicOK creates GetEventsPublicOK with default headers values
func NewGetEventsPublicOK() *GetEventsPublicOK {

	return &GetEventsPublicOK{}
}

// WithPayload adds the payload to the get events public o k response
func (o *GetEventsPublicOK) WithPayload(payload []*models.EventPublicDTO) *GetEventsPublicOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get events public o k response
func (o *GetEventsPublicOK) SetPayload(payload []*models.EventPublicDTO) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetEventsPublicOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.EventPublicDTO, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetEventsPublicInternalServerErrorCode is the HTTP code returned for type GetEventsPublicInternalServerError
const GetEventsPublicInternalServerErrorCode int = 500

/*
GetEventsPublicInternalServerError Error

swagger:response getEventsPublicInternalServerError
*/
type GetEventsPublicInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetEventsPublicInternalServerError creates GetEventsPublicInternalServerError with default headers values
func NewGetEventsPublicInternalServerError() *GetEventsPublicInternalServerError {

	return &GetEventsPublicInternalServerError{}
}

// WithPayload adds the payload to the get events public internal server error response
func (o *GetEventsPublicInternalServerError) WithPayload(payload *models.Error) *GetEventsPublicInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get events public internal server error response
func (o *GetEventsPublicInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetEventsPublicInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
