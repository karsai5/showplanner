/* tslint:disable */
/* eslint-disable */
/**
 * Showplanner backend
 * API description in Markdown.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AvailabilityDTO
 */
export interface AvailabilityDTO {
    /**
     * 
     * @type {number}
     * @memberof AvailabilityDTO
     */
    eventId: number;
    /**
     * 
     * @type {string}
     * @memberof AvailabilityDTO
     */
    userId: string;
    /**
     * 
     * @type {boolean}
     * @memberof AvailabilityDTO
     */
    available: boolean;
}

/**
 * Check if a given object implements the AvailabilityDTO interface.
 */
export function instanceOfAvailabilityDTO(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "eventId" in value;
    isInstance = isInstance && "userId" in value;
    isInstance = isInstance && "available" in value;

    return isInstance;
}

export function AvailabilityDTOFromJSON(json: any): AvailabilityDTO {
    return AvailabilityDTOFromJSONTyped(json, false);
}

export function AvailabilityDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): AvailabilityDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'eventId': json['eventId'],
        'userId': json['userId'],
        'available': json['available'],
    };
}

export function AvailabilityDTOToJSON(value?: AvailabilityDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'eventId': value.eventId,
        'userId': value.userId,
        'available': value.available,
    };
}

