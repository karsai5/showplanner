/* tslint:disable */
/* eslint-disable */
/**
 * Showplanner backend
 * API description in Markdown.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { PersonSummaryDTO } from './PersonSummaryDTO';
import {
    PersonSummaryDTOFromJSON,
    PersonSummaryDTOFromJSONTyped,
    PersonSummaryDTOToJSON,
} from './PersonSummaryDTO';

/**
 * 
 * @export
 * @interface ShadowDTO
 */
export interface ShadowDTO {
    /**
     * 
     * @type {number}
     * @memberof ShadowDTO
     */
    id: number;
    /**
     * 
     * @type {PersonSummaryDTO}
     * @memberof ShadowDTO
     */
    person: PersonSummaryDTO;
    /**
     * 
     * @type {boolean}
     * @memberof ShadowDTO
     */
    available: boolean | null;
}

/**
 * Check if a given object implements the ShadowDTO interface.
 */
export function instanceOfShadowDTO(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "person" in value;
    isInstance = isInstance && "available" in value;

    return isInstance;
}

export function ShadowDTOFromJSON(json: any): ShadowDTO {
    return ShadowDTOFromJSONTyped(json, false);
}

export function ShadowDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): ShadowDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'person': PersonSummaryDTOFromJSON(json['person']),
        'available': json['available'],
    };
}

export function ShadowDTOToJSON(value?: ShadowDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'person': PersonSummaryDTOToJSON(value.person),
        'available': value.available,
    };
}

