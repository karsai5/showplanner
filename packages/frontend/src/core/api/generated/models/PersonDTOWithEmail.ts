/* tslint:disable */
/* eslint-disable */
/**
 * Showplanner backend
 * API description in Markdown.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { PersonPrivateDetailsDTO } from './PersonPrivateDetailsDTO';
import {
    PersonPrivateDetailsDTOFromJSON,
    PersonPrivateDetailsDTOFromJSONTyped,
    PersonPrivateDetailsDTOToJSON,
} from './PersonPrivateDetailsDTO';

/**
 * 
 * @export
 * @interface PersonDTOWithEmail
 */
export interface PersonDTOWithEmail {
    /**
     * 
     * @type {string}
     * @memberof PersonDTOWithEmail
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof PersonDTOWithEmail
     */
    firstName: string;
    /**
     * 
     * @type {string}
     * @memberof PersonDTOWithEmail
     */
    preferredName?: string;
    /**
     * 
     * @type {string}
     * @memberof PersonDTOWithEmail
     */
    lastName: string;
    /**
     * 
     * @type {string}
     * @memberof PersonDTOWithEmail
     */
    pronouns?: string;
    /**
     * 
     * @type {PersonPrivateDetailsDTO}
     * @memberof PersonDTOWithEmail
     */
    _private?: PersonPrivateDetailsDTO;
    /**
     * 
     * @type {string}
     * @memberof PersonDTOWithEmail
     */
    email?: string;
}

/**
 * Check if a given object implements the PersonDTOWithEmail interface.
 */
export function instanceOfPersonDTOWithEmail(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "firstName" in value;
    isInstance = isInstance && "lastName" in value;

    return isInstance;
}

export function PersonDTOWithEmailFromJSON(json: any): PersonDTOWithEmail {
    return PersonDTOWithEmailFromJSONTyped(json, false);
}

export function PersonDTOWithEmailFromJSONTyped(json: any, ignoreDiscriminator: boolean): PersonDTOWithEmail {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'firstName': json['firstName'],
        'preferredName': !exists(json, 'preferredName') ? undefined : json['preferredName'],
        'lastName': json['lastName'],
        'pronouns': !exists(json, 'pronouns') ? undefined : json['pronouns'],
        '_private': !exists(json, 'private') ? undefined : PersonPrivateDetailsDTOFromJSON(json['private']),
        'email': !exists(json, 'email') ? undefined : json['email'],
    };
}

export function PersonDTOWithEmailToJSON(value?: PersonDTOWithEmail | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'firstName': value.firstName,
        'preferredName': value.preferredName,
        'lastName': value.lastName,
        'pronouns': value.pronouns,
        'private': PersonPrivateDetailsDTOToJSON(value._private),
        'email': value.email,
    };
}

