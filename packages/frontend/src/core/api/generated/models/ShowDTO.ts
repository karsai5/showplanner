/* tslint:disable */
/* eslint-disable */
/**
 * Showplanner backend
 * API description in Markdown.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { MediaDTO } from './MediaDTO';
import {
    MediaDTOFromJSON,
    MediaDTOFromJSONTyped,
    MediaDTOToJSON,
} from './MediaDTO';

/**
 * 
 * @export
 * @interface ShowDTO
 */
export interface ShowDTO {
    /**
     * 
     * @type {number}
     * @memberof ShowDTO
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof ShowDTO
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof ShowDTO
     */
    company: string;
    /**
     * 
     * @type {string}
     * @memberof ShowDTO
     */
    slug: string;
    /**
     * 
     * @type {Date}
     * @memberof ShowDTO
     */
    start?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof ShowDTO
     */
    end?: Date | null;
    /**
     * 
     * @type {MediaDTO}
     * @memberof ShowDTO
     */
    image?: MediaDTO;
}

/**
 * Check if a given object implements the ShowDTO interface.
 */
export function instanceOfShowDTO(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "company" in value;
    isInstance = isInstance && "slug" in value;

    return isInstance;
}

export function ShowDTOFromJSON(json: any): ShowDTO {
    return ShowDTOFromJSONTyped(json, false);
}

export function ShowDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): ShowDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'company': json['company'],
        'slug': json['slug'],
        'start': !exists(json, 'start') ? undefined : (json['start'] === null ? null : new Date(json['start'])),
        'end': !exists(json, 'end') ? undefined : (json['end'] === null ? null : new Date(json['end'])),
        'image': !exists(json, 'image') ? undefined : MediaDTOFromJSON(json['image']),
    };
}

export function ShowDTOToJSON(value?: ShowDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'company': value.company,
        'slug': value.slug,
        'start': value.start === undefined ? undefined : (value.start === null ? null : value.start.toISOString()),
        'end': value.end === undefined ? undefined : (value.end === null ? null : value.end.toISOString()),
        'image': MediaDTOToJSON(value.image),
    };
}

