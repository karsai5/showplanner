/* tslint:disable */
/* eslint-disable */
/**
 * Showplanner backend
 * API description in Markdown.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AvailabilitiesDTOEventsInner } from './AvailabilitiesDTOEventsInner';
import {
  AvailabilitiesDTOEventsInnerFromJSON,
  AvailabilitiesDTOEventsInnerFromJSONTyped,
  AvailabilitiesDTOEventsInnerToJSON,
} from './AvailabilitiesDTOEventsInner';
import type { PersonSummaryDTO } from './PersonSummaryDTO';
import {
  PersonSummaryDTOFromJSON,
  PersonSummaryDTOFromJSONTyped,
  PersonSummaryDTOToJSON,
} from './PersonSummaryDTO';

/**
 *
 * @export
 * @interface AvailabilitiesDTO
 */
export interface AvailabilitiesDTO {
  /**
   *
   * @type {Array<PersonSummaryDTO>}
   * @memberof AvailabilitiesDTO
   */
  people?: Array<PersonSummaryDTO>;
  /**
   *
   * @type {Array<AvailabilitiesDTOEventsInner>}
   * @memberof AvailabilitiesDTO
   */
  events?: Array<AvailabilitiesDTOEventsInner>;
}

/**
 * Check if a given object implements the AvailabilitiesDTO interface.
 */
export function instanceOfAvailabilitiesDTO(value: object): boolean {
  let isInstance = true;

  return isInstance;
}

export function AvailabilitiesDTOFromJSON(json: any): AvailabilitiesDTO {
  return AvailabilitiesDTOFromJSONTyped(json, false);
}

export function AvailabilitiesDTOFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): AvailabilitiesDTO {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    people: !exists(json, 'people')
      ? undefined
      : (json['people'] as Array<any>).map(PersonSummaryDTOFromJSON),
    events: !exists(json, 'events')
      ? undefined
      : (json['events'] as Array<any>).map(
          AvailabilitiesDTOEventsInnerFromJSON,
        ),
  };
}

export function AvailabilitiesDTOToJSON(value?: AvailabilitiesDTO | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    people:
      value.people === undefined
        ? undefined
        : (value.people as Array<any>).map(PersonSummaryDTOToJSON),
    events:
      value.events === undefined
        ? undefined
        : (value.events as Array<any>).map(AvailabilitiesDTOEventsInnerToJSON),
  };
}
