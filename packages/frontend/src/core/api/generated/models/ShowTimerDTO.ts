/* tslint:disable */
/* eslint-disable */
/**
 * Showplanner backend
 * API description in Markdown.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
/**
 *
 * @export
 * @interface ShowTimerDTO
 */
export interface ShowTimerDTO {
  /**
   *
   * @type {Date}
   * @memberof ShowTimerDTO
   */
  expectedCurtainsUp?: Date | null;
  /**
   *
   * @type {Date}
   * @memberof ShowTimerDTO
   */
  showStart?: Date | null;
  /**
   *
   * @type {Date}
   * @memberof ShowTimerDTO
   */
  showEnd?: Date | null;
  /**
   *
   * @type {Date}
   * @memberof ShowTimerDTO
   */
  intervalStart?: Date | null;
  /**
   *
   * @type {Date}
   * @memberof ShowTimerDTO
   */
  intervalEnd?: Date | null;
  /**
   *
   * @type {Date}
   * @memberof ShowTimerDTO
   */
  houseOpen?: Date | null;
  /**
   *
   * @type {Date}
   * @memberof ShowTimerDTO
   */
  actOneFOHClearance?: Date | null;
  /**
   *
   * @type {Date}
   * @memberof ShowTimerDTO
   */
  actTwoFOHClearance?: Date | null;
  /**
   *
   * @type {number}
   * @memberof ShowTimerDTO
   */
  eventId?: number | null;
  /**
   *
   * @type {string}
   * @memberof ShowTimerDTO
   */
  id?: string;
}

/**
 * Check if a given object implements the ShowTimerDTO interface.
 */
export function instanceOfShowTimerDTO(value: object): boolean {
  let isInstance = true;

  return isInstance;
}

export function ShowTimerDTOFromJSON(json: any): ShowTimerDTO {
  return ShowTimerDTOFromJSONTyped(json, false);
}

export function ShowTimerDTOFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): ShowTimerDTO {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    expectedCurtainsUp: !exists(json, "expectedCurtainsUp")
      ? undefined
      : json["expectedCurtainsUp"] === null
      ? null
      : new Date(json["expectedCurtainsUp"]),
    showStart: !exists(json, "showStart")
      ? undefined
      : json["showStart"] === null
      ? null
      : new Date(json["showStart"]),
    showEnd: !exists(json, "showEnd")
      ? undefined
      : json["showEnd"] === null
      ? null
      : new Date(json["showEnd"]),
    intervalStart: !exists(json, "intervalStart")
      ? undefined
      : json["intervalStart"] === null
      ? null
      : new Date(json["intervalStart"]),
    intervalEnd: !exists(json, "intervalEnd")
      ? undefined
      : json["intervalEnd"] === null
      ? null
      : new Date(json["intervalEnd"]),
    houseOpen: !exists(json, "houseOpen")
      ? undefined
      : json["houseOpen"] === null
      ? null
      : new Date(json["houseOpen"]),
    actOneFOHClearance: !exists(json, "actOneFOHClearance")
      ? undefined
      : json["actOneFOHClearance"] === null
      ? null
      : new Date(json["actOneFOHClearance"]),
    actTwoFOHClearance: !exists(json, "actTwoFOHClearance")
      ? undefined
      : json["actTwoFOHClearance"] === null
      ? null
      : new Date(json["actTwoFOHClearance"]),
    eventId: !exists(json, "eventId") ? undefined : json["eventId"],
    id: !exists(json, "id") ? undefined : json["id"],
  };
}

export function ShowTimerDTOToJSON(value?: ShowTimerDTO | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    expectedCurtainsUp:
      value.expectedCurtainsUp === undefined
        ? undefined
        : value.expectedCurtainsUp === null
        ? null
        : value.expectedCurtainsUp.toISOString(),
    showStart:
      value.showStart === undefined
        ? undefined
        : value.showStart === null
        ? null
        : value.showStart.toISOString(),
    showEnd:
      value.showEnd === undefined
        ? undefined
        : value.showEnd === null
        ? null
        : value.showEnd.toISOString(),
    intervalStart:
      value.intervalStart === undefined
        ? undefined
        : value.intervalStart === null
        ? null
        : value.intervalStart.toISOString(),
    intervalEnd:
      value.intervalEnd === undefined
        ? undefined
        : value.intervalEnd === null
        ? null
        : value.intervalEnd.toISOString(),
    houseOpen:
      value.houseOpen === undefined
        ? undefined
        : value.houseOpen === null
        ? null
        : value.houseOpen.toISOString(),
    actOneFOHClearance:
      value.actOneFOHClearance === undefined
        ? undefined
        : value.actOneFOHClearance === null
        ? null
        : value.actOneFOHClearance.toISOString(),
    actTwoFOHClearance:
      value.actTwoFOHClearance === undefined
        ? undefined
        : value.actTwoFOHClearance === null
        ? null
        : value.actTwoFOHClearance.toISOString(),
    eventId: value.eventId,
    id: value.id,
  };
}
