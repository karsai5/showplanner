/* tslint:disable */
/* eslint-disable */
/**
 * Showplanner backend
 * API description in Markdown.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { PersonSummaryDTO } from './PersonSummaryDTO';
import {
    PersonSummaryDTOFromJSON,
    PersonSummaryDTOFromJSONTyped,
    PersonSummaryDTOToJSON,
} from './PersonSummaryDTO';

/**
 * 
 * @export
 * @interface RosterAssignedDTO
 */
export interface RosterAssignedDTO {
    /**
     * 
     * @type {PersonSummaryDTO}
     * @memberof RosterAssignedDTO
     */
    person: PersonSummaryDTO;
    /**
     * 
     * @type {boolean}
     * @memberof RosterAssignedDTO
     */
    cover: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof RosterAssignedDTO
     */
    available: boolean;
}

/**
 * Check if a given object implements the RosterAssignedDTO interface.
 */
export function instanceOfRosterAssignedDTO(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "person" in value;
    isInstance = isInstance && "cover" in value;
    isInstance = isInstance && "available" in value;

    return isInstance;
}

export function RosterAssignedDTOFromJSON(json: any): RosterAssignedDTO {
    return RosterAssignedDTOFromJSONTyped(json, false);
}

export function RosterAssignedDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): RosterAssignedDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'person': PersonSummaryDTOFromJSON(json['person']),
        'cover': json['cover'],
        'available': json['available'],
    };
}

export function RosterAssignedDTOToJSON(value?: RosterAssignedDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'person': PersonSummaryDTOToJSON(value.person),
        'cover': value.cover,
        'available': value.available,
    };
}

