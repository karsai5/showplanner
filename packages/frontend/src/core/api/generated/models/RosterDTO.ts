/* tslint:disable */
/* eslint-disable */
/**
 * Showplanner backend
 * API description in Markdown.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { RoleDTO } from './RoleDTO';
import {
    RoleDTOFromJSON,
    RoleDTOFromJSONTyped,
    RoleDTOToJSON,
} from './RoleDTO';
import type { RosterDTOEventsInner } from './RosterDTOEventsInner';
import {
    RosterDTOEventsInnerFromJSON,
    RosterDTOEventsInnerFromJSONTyped,
    RosterDTOEventsInnerToJSON,
} from './RosterDTOEventsInner';

/**
 * 
 * @export
 * @interface RosterDTO
 */
export interface RosterDTO {
    /**
     * 
     * @type {Array<RoleDTO>}
     * @memberof RosterDTO
     */
    roles?: Array<RoleDTO>;
    /**
     * 
     * @type {Array<RosterDTOEventsInner>}
     * @memberof RosterDTO
     */
    events?: Array<RosterDTOEventsInner>;
}

/**
 * Check if a given object implements the RosterDTO interface.
 */
export function instanceOfRosterDTO(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function RosterDTOFromJSON(json: any): RosterDTO {
    return RosterDTOFromJSONTyped(json, false);
}

export function RosterDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): RosterDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'roles': !exists(json, 'roles') ? undefined : ((json['roles'] as Array<any>).map(RoleDTOFromJSON)),
        'events': !exists(json, 'events') ? undefined : ((json['events'] as Array<any>).map(RosterDTOEventsInnerFromJSON)),
    };
}

export function RosterDTOToJSON(value?: RosterDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'roles': value.roles === undefined ? undefined : ((value.roles as Array<any>).map(RoleDTOToJSON)),
        'events': value.events === undefined ? undefined : ((value.events as Array<any>).map(RosterDTOEventsInnerToJSON)),
    };
}

