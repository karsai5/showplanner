/* tslint:disable */
/* eslint-disable */
/**
 * Showplanner backend
 * API description in Markdown.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { EventPublicDTO } from './EventPublicDTO';
import {
  EventPublicDTOFromJSON,
  EventPublicDTOFromJSONTyped,
  EventPublicDTOToJSON,
} from './EventPublicDTO';

/**
 *
 * @export
 * @interface PublicScheduleGet200Response
 */
export interface PublicScheduleGet200Response {
  /**
   *
   * @type {string}
   * @memberof PublicScheduleGet200Response
   */
  showName?: string;
  /**
   *
   * @type {Array<EventPublicDTO>}
   * @memberof PublicScheduleGet200Response
   */
  events?: Array<EventPublicDTO>;
}

/**
 * Check if a given object implements the PublicScheduleGet200Response interface.
 */
export function instanceOfPublicScheduleGet200Response(value: object): boolean {
  let isInstance = true;

  return isInstance;
}

export function PublicScheduleGet200ResponseFromJSON(
  json: any,
): PublicScheduleGet200Response {
  return PublicScheduleGet200ResponseFromJSONTyped(json, false);
}

export function PublicScheduleGet200ResponseFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): PublicScheduleGet200Response {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    showName: !exists(json, 'showName') ? undefined : json['showName'],
    events: !exists(json, 'events')
      ? undefined
      : (json['events'] as Array<any>).map(EventPublicDTOFromJSON),
  };
}

export function PublicScheduleGet200ResponseToJSON(
  value?: PublicScheduleGet200Response | null,
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    showName: value.showName,
    events:
      value.events === undefined
        ? undefined
        : (value.events as Array<any>).map(EventPublicDTOToJSON),
  };
}
